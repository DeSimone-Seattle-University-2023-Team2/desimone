@page "/monitoring"
@using Microsoft.AspNetCore.Authorization
@using Application.Entities
@using Application.Services
@using Presentation.Configuration
@using Presentation.Components.UI

@attribute [Authorize]
@attribute [StreamRendering]
@attribute [RenderModeInteractiveServer]

@inject JobService JobService

<PageTitle>Monitoring</PageTitle>
<AuthorizeView>
    @if (_jobs == null)
    {
        <div class="row justify-content-center p-5">
            <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <h2>Running Jobs</h2>
        <hr/>
        <MonitoringTable Jobs="@(_jobs.Where(job => IsJobRunning(job.Status)).ToList())"/>

        <h2>Finished Jobs</h2>
        <hr/>
        <MonitoringTable Jobs="@(_jobs.Where(job => !IsJobRunning(job.Status)).ToList())"/>
    }
</AuthorizeView>

@code {
    private static List<Job>? _jobs;
    protected override void OnInitialized() => _jobs = JobService.GetJobs().Result;
    private static bool IsJobRunning(JobStatus? status) => status?.Name is "Running" or "Pending";
}
