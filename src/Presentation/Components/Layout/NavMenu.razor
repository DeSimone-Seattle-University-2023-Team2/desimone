@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand px-md-3" href="#"><img src="logo.png"/></a>
        <ul class="navbar-nav me-auto mb-2 mb-lg-0"></ul>
        
        
        <AuthorizeView>
            <Authorized>
                <NavLink class="text-white px-md-3" href="Account/Manage">
                    <button class="btn btn-dark nav-user-identity">@context.User.Identity?.Name</button>
                </NavLink>
            
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken/>
                    <input type="hidden" name="ReturnUrl" value="@currentUrl"/>
                    <div class="text-white px-md-3">
                        <button type="submit" class="btn btn-primary">
                            Logout
                        </button>
                    </div>
                </form>
            </Authorized>
            
            <NotAuthorized>
                <NavLink class="text-white px-md-3" href="Account/Login">
                    <button class="btn btn-primary">Login</button>
                </NavLink>
            </NotAuthorized>
            
        </AuthorizeView>
    </div>
</nav>
<nav class="navbar navbar-expand-lg navbar-dark navbar-bottom">
    <div class="nav-item">
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
            <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span>Dashboard
        </NavLink>
    </div>

    <div class="nav-item">
        <NavLink class="nav-link" href="submission">
            <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span>Submission
        </NavLink>
    </div>

    <div class="nav-item">
        <NavLink class="nav-link" href="monitoring">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Monitoring
        </NavLink>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}